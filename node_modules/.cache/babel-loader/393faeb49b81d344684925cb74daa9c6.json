{"ast":null,"code":"// import { useRef, useState } from \"react\"\n// import { AppContext } from \"../../utils/context\"\n// import { AppContextProviderComponent } from \"./types\"\n// export const AppContextProvider: AppContextProviderComponent = ({ children }) => {\n//   const cache = useRef(new Map<string, string>())\n//   const [error, setError] = useState<string>(\"\")\n// //   return (\n// //     <AppContext.Provider value={{ setError, cache }}>\n// //       {error ? (\n// //         <div className=\"RampError\">\n// //           <h1 className=\"RampTextHeading--l\">Oops. Application broken</h1>\n// //           <div className=\"RampBreak--l\" />\n// //           Error: {error}\n// //         </div>\n// //       ) : (\n// //         children\n// //       )}\n// //     </AppContext.Provider>\n// //   )\n// // }","map":{"version":3,"names":[],"sources":["/Users/rosariodavi/Downloads/ramp-fe-challenge 4/src/components/AppContextProvider/index.tsx"],"sourcesContent":["// import { useRef, useState } from \"react\"\n// import { AppContext } from \"../../utils/context\"\n// import { AppContextProviderComponent } from \"./types\"\n\n// export const AppContextProvider: AppContextProviderComponent = ({ children }) => {\n//   const cache = useRef(new Map<string, string>())\n//   const [error, setError] = useState<string>(\"\")\n\n// //   return (\n// //     <AppContext.Provider value={{ setError, cache }}>\n// //       {error ? (\n// //         <div className=\"RampError\">\n// //           <h1 className=\"RampTextHeading--l\">Oops. Application broken</h1>\n// //           <div className=\"RampBreak--l\" />\n// //           Error: {error}\n// //         </div>\n// //       ) : (\n// //         children\n// //       )}\n// //     </AppContext.Provider>\n// //   )\n// // }\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}